# This is a basic workflow to help you get started with Actions

name: arene-ivi-homescreen_ivi-homescreen

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths-ignore: ".github/workflows/**"
  pull_request:
    branches: [ main ]
    paths-ignore: ".github/workflows/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  github-hook-build:
    # The type of runner that the job will run on
    runs-on: [ self-hosted, elastic-t2large ]
    container:
      image: arene-os-services-cockpit-docker.artifactory-ha.tmc-stargate.com/poky-tekton:latest
      options: --user tekton
      credentials:
        username: ${{ secrets.TMCSTARGATE_ARTIFACTORY_USERNAME }}
        password: ${{ secrets.TMCSTARGATE_ARTIFACTORY_PASSWORD }}
      volumes:
        - ${{ github.workspace }}/workdir:/workdir
    env:
      component: ${{ 'arene-ivi' }}
      unit: ${{ 'homescreen' }}
      GITHUB_URL: "https://github.tmc-stargate.com/arene-os-services-cockpit-tmc-wa/"
      TARGET_REPOSITORY: "ivi-homescreen"
      EVENT_TYPE: "github-actions-hook-build"
      CODEQL_DISPATCH_TYPES: "none"
      ENABLE_HOOK_BUILD: "true"
      ADD_UNIT_LABEL: "true"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Initialize setup
        working-directory: ${{ github.workspace }}
        env:
          TMCSTARGATE_GITHUB_USER: ${{ secrets.TMCSTARGATE_GITHUB_USER }}
          TMCSTARGATE_GITHUB_TOKEN: ${{ secrets.TMCSTARGATE_GITHUB_TOKEN }}
          TMCSTARGATE_ARTIFACTORY_USERNAME: ${{ secrets.TMCSTARGATE_ARTIFACTORY_USERNAME }}
          TMCSTARGATE_ARTIFACTORY_PASSWORD: ${{ secrets.TMCSTARGATE_ARTIFACTORY_PASSWORD }}
        shell: bash
        run: |
          set -e
          # change the owner to be tekton
          sudo chown tekton:tekton /workdir
          sudo chown tekton:tekton -R /github/home
          # workspace reflesh
          if [ -d /workdir ] ; then
            echo "Delete /workdir/*"
            rm -rf /workdir/*
          fi
          # Setting ~/.netrc for authentication
          echo "machine github.tmc-stargate.com login ${TMCSTARGATE_GITHUB_USER} password ${TMCSTARGATE_GITHUB_TOKEN}" > /workdir/.netrc
          echo "machine artifactory-ha.tmc-stargate.com login ${TMCSTARGATE_ARTIFACTORY_USERNAME} password ${TMCSTARGATE_ARTIFACTORY_PASSWORD}" >> /workdir/.netrc
          if [ -e /github/home/.netrc ];then
            rm /github/home/.netrc
          fi
          sudo ln -s /workdir/.netrc /github/home/.netrc
          # Remove the arene-ivi-misc-integ-integrator directory
          if [ -e "/workdir/arene-ivi-misc-integ-integrator" ];then
            rm -rf /workdir/arene-ivi-misc-integ-integrator
          fi
      - name: Checkout repository of arene-ivi-misc-integ-integrator
        uses: actions/checkout@v2
        with:
          repository: arene-os-services-cockpit-tmc-wa/arene-ivi-misc-integ-integrator
          path: workdir/arene-ivi-misc-integ-integrator
          token: ${{ secrets.TMCSTARGATE_GITHUB_TOKEN }}
      - name: Branch name of the merge destination
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: merge_branch
      - name: Execute codeql in Github Actions
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: ${{ github.workspace }}/workdir
        env:
          BRANCH_PULLREQ_HEAD: ${{ github.event.pull_request.head.ref }}
          PULLREQUEST_NUMBER: ${{ github.event.pull_request.number }}
          PULLREQUEST_ORG_AND_REPO_NAME: ${{ github.event.pull_request.head.repo.full_name }}
        shell: bash
        run: |
          set -e
          # Call the CodeQL job
          if [[ ${ENABLE_HOOK_BUILD} == "true" && ${CODEQL_DISPATCH_TYPES} != "none" ]];then
            curl -n -v \
                -X POST \
                -d "{ \"event_type\": \"${CODEQL_DISPATCH_TYPES}\", \
                  \"client_payload\": { \
                  \"TARGET_BRANCH\": \"${BRANCH_PULLREQ_HEAD}\", \
                  \"PULLREQUEST_NUMBER\": \"${PULLREQUEST_NUMBER}\", \
                  \"PULLREQUEST_ORG_AND_REPO_NAME\": \"${PULLREQUEST_ORG_AND_REPO_NAME}\" \
                  } }" \
                https://github.tmc-stargate.com/api/v3/repos/arene-os-services-cockpit-wa/arene-ivi-infra-codeql-analysis/dispatches
          fi
      - name: Add unit name label to pull-request-page
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: ${{ github.workspace }}/workdir
        env:
          PULLREQUEST_NUMBER: ${{ github.event.pull_request.number }}
          PULLREQUEST_ORG_AND_REPO_NAME: ${{ github.event.pull_request.head.repo.full_name }}
        shell: bash
        run: |
          set -e
          # Add unit name label
          if [[ ${ADD_UNIT_LABEL} == "true" ]];then
            # Add "unit : " to label, because identify other labels.
            ./arene-ivi-misc-integ-integrator/update_pull-req-label.sh POST "unit : ivi-homescreen"
          fi
      - name: Execute pull_request/merge hook build in Github Actions
        working-directory: ${{ github.workspace }}/workdir
        env:
          BRANCH_PULLREQ_HEAD: ${{ github.event.pull_request.head.ref }}
          BRANCH_MASTER: ${{ steps.merge_branch.outputs.branch }}
          EVENT_NAME: ${{ github.event_name }}
        shell: bash
        run: |
          if [[ ${ENABLE_HOOK_BUILD} == "true" ]];then
            set -e
            # Fix configration to TMCSG Artifactory
            echo 'CONFIG_CICD_P21AGL_DL_MIRROR="https://artifactory-ha.tmc-stargate.com:443/artifactory/arene-os-services-cockpit-generic/yocto/downloads/"' >> ./arene-ivi-misc-integ-integrator/config.txt
            echo 'CONFIG_CICD_P21AGL_SS_MIRROR="https://artifactory-ha.tmc-stargate.com:443/artifactory/arene-os-services-cockpit-generic/yocto/sstate-cache/ivi/x86_64/"' >> ./arene-ivi-misc-integ-integrator/config.txt
            export PATH=${PATH}:/home/tekton/bin
            if [[ ${EVENT_NAME} == "pull_request" ]];then
              TARGET_BRANCH=${BRANCH_PULLREQ_HEAD}
            else
              TARGET_BRANCH=${BRANCH_MASTER}
            fi
            # Execute the build script
            ./arene-ivi-misc-integ-integrator/github_hook_x86_for_github_actions.sh master ${TARGET_REPOSITORY} ${TARGET_BRANCH} ${component} ${unit} ${GITHUB_URL}
          fi
      - name: Finalize (SUCCESS)
        if: ${{ success() }}
        working-directory: ${{ github.workspace }}/workdir
        env:
          BRANCH_PULLREQ_HEAD: ${{ github.event.pull_request.head.ref }}
          BRANCH_MASTER: ${{ steps.merge_branch.outputs.branch }}
          EVENT_NAME: ${{ github.event_name }}
          SLACK_INCOMING_WEBHOOK_URL: ${{secrets.SLACK_INCOMING_WEBHOOK_HOOK_BUILD_CH_URL}}
        run: |
          #!/usr/bin/env bash
          set -e
          if [[ ${EVENT_NAME} == "pull_request" ]];then
            TARGET_BRANCH=${BRANCH_PULLREQ_HEAD}
          else
            TARGET_BRANCH=${BRANCH_MASTER}
          fi
          if [[ ${ENABLE_HOOK_BUILD} == "true" ]];then
            echo "-- Send messages to slack. --"
            ./arene-ivi-misc-integ-integrator/slack_notify_for_github.sh success ${TARGET_REPOSITORY} ${TARGET_BRANCH}
          fi
          # Remove the checkout repository
          if [ -e "arene-ivi-misc-integ-integrator" ];then
            rm -rf ./arene-ivi-misc-integ-integrator
          fi
      - name: Finalize (FAILURE)
        if: ${{ failure() }}
        working-directory: ${{ github.workspace }}/workdir
        env:
          BRANCH_PULLREQ_HEAD: ${{ github.event.pull_request.head.ref }}
          BRANCH_MASTER: ${{ steps.merge_branch.outputs.branch }}
          EVENT_NAME: ${{ github.event_name }}
          SLACK_INCOMING_WEBHOOK_URL: ${{secrets.SLACK_INCOMING_WEBHOOK_HOOK_BUILD_CH_URL}}
        run: |
          #!/usr/bin/env bash
          set -e
          if [[ ${EVENT_NAME} == "pull_request" ]];then
            TARGET_BRANCH=${BRANCH_PULLREQ_HEAD}
          else
            TARGET_BRANCH=${BRANCH_MASTER}
          fi
          if [[ ${ENABLE_HOOK_BUILD} == "true" ]];then
            echo "-- Send messages to slack. --"
            ./arene-ivi-misc-integ-integrator/slack_notify_for_github.sh failure ${TARGET_REPOSITORY} ${TARGET_BRANCH}
          fi
          # Remove the checkout repository
          if [ -e "arene-ivi-misc-integ-integrator" ];then
            rm -rf ./arene-ivi-misc-integ-integrator
          fi
